{ "content": "import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { combineLatestWith, filter, Subscription, switchMap, tap } from 'rxjs';\nimport { NetlifyFormsService } from '../../blog/netlify-forms.service';\nimport { CommentFormData } from './comment-form2-data';\n\n@Component({\n  selector: 'app-comment-form2',\n  templateUrl: './comment-form2.component.html',\n  styleUrls: ['./comment-form2.component.scss']\n})\nexport class CommentForm2Component implements OnDestroy {\n  @ViewChild('formRef')\n  form!: NgForm;\n  beingSubmitted: boolean = false;\n  isSuccess = false;\n  isError = false;\n  error?: string;\n\n  model: CommentFormData = { name: '', comment: '', 'form-name': 'post-comment-form', email: '', url: '' };\n  formSubscription?: Subscription;\n\n  constructor(private netlifyForms: NetlifyFormsService) {\n  }\n\n  ngAfterViewInit() {\n    this.formSubscription = this.form.valueChanges?.pipe(\n      filter(() => this.form.valid! &amp;&amp; !this.form.pristine!),\n      combineLatestWith(this.form.ngSubmit), \n      filter(() => !this.beingSubmitted),\n      tap(() => this.beingSubmitted = true),\n      switchMap(() => this.netlifyForms.submitFeedback(this.model as CommentFormData)),\n    )\n      .subscribe({\n        next: () => {\n          this.beingSubmitted = false;\n          this.isSuccess = true;\n        },\n        error: (err) => {\n          console.error(\"There was an error with form submission\", err);\n          this.isError = true;\n          this.error = err;\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.formSubscription?.unsubscribe();\n  }\n}\n"}