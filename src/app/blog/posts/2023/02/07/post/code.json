{ "component": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { switchMap, tap } from 'rxjs';\nimport { NetlifyFormsService } from '../../../../../../netlify-forms.service';\nimport { ExampleFormData } from './example-form-data';\n\n@Component({\n  selector: 'app-example-form',\n  templateUrl: './example-form.component.html',\n  styleUrls: ['./example-form.component.scss']\n})\nexport class ExampleFormComponent implements AfterViewInit {\n  @ViewChild('formRef')\n  form!: NgForm;\n  beingSubmitted: boolean = false;\n  isSuccess = false;\n  isError = false;\n  error?: string;\n\n  model: ExampleFormData = { name: '', comment: '', 'form-name': 'comment-form', email: '', url: '' };\n\n  constructor(private netlifyForms: NetlifyFormsService) {\n  }\n\n  ngAfterViewInit() {\n    this.form.ngSubmit\n      .pipe(\n        tap(() => this.beingSubmitted = true),\n        switchMap(() => this.netlifyForms.submitFeedback(this.model as ExampleFormData)),\n      )\n      .subscribe({\n        next: () => {\n          this.beingSubmitted = false;\n          this.isSuccess = true;\n        },\n        error: (err) => {\n          this.isError = true;\n          this.error = err;\n        }\n      });\n  }\n}", "service": "import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Injectable, isDevMode } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ExampleFormData } from './example-form-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetlifyFormsService {\n\n  constructor(private http: HttpClient) { }\n\n  submitFeedback(commentEntry: ExampleFormData): Observable<any> {\n\n    const entry = new HttpParams({\n      fromObject: {\n        ...commentEntry\n      }\n    });\n\n    return this.http\n      .post(\n        isDevMode() ? 'http://localhost:8000/' : '/',\n        entry.toString(),\n        {\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          responseType: 'text'\n        }\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(err: HttpErrorResponse) {\n    let errMsg = '';\n\n    if (err.error instanceof ErrorEvent) {\n      errMsg = `A client-side error occurred: ${err.error.message}`;\n    } else {\n      errMsg = `A server-side error occurred. Code: ${err.status}. Message: ${err.message}`;\n    }\n\n    return throwError(() => new Error(errMsg));\n  }\n}\n", "serviceStart": "import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Injectable, isDevMode } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ExampleFormData } from './example-form-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetlifyFormsService {\n\n  constructor(private http: HttpClient) { }\n\n}"}