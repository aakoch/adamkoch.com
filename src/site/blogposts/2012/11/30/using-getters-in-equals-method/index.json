{"title":"Using getters in equals() method","link":"https://www.adamkoch.com/2012/11/30/using-getters-in-equals-method/","pubDate":"Fri, 30 Nov 2012 16:56:55 +0000","dc:creator":"admin","guid":[{"_":"http://www.adamkoch.com/?p=2565","$":{"isPermaLink":"false"}}],"description":[""],"content:encoded":"I have an uncontrollable urge to refactor. To a fault. Most everything. If I was cleaning a campsite, I would be putting in indoor plumbing. So, when I opened an old class I changed the old <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#hashCode()\">hashcode</a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#equals(java.lang.Object)\">equals</a> methods with our team's standard use of <a href=\"http://commons.apache.org/lang/apidocs/index.html?org/apache/commons/lang3/builder/HashCodeBuilder.html\">HashBuilder</a> and <a href=\"http://commons.apache.org/lang/apidocs/org/apache/commons/lang3/builder/EqualsBuilder.html\">EqualsBuilder</a>. (The reason for opening the class was to add a <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#toString()\">toString</a> method.)\r\n\r\n[java light=\"true\" collapse=\"true\" title=\"Old Eclipse template for using EqualsBuilder\"]\r\n@Override\r\npublic boolean equals(Object obj) {\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (!(obj instanceof ${enclosing_type})) {\r\n        return false;\r\n    }\r\n    ${enclosing_type} other = (${enclosing_type}) obj;\r\n    ${builderType:newType(org.apache.commons.lang3.builder.EqualsBuilder)} ${builder:newName(builderType)} = new ${builderType}();\r\n    ${builder}.append(this.${field}, other.${field}());${cursor}\r\n\r\n    return ${builder}.isEquals();\r\n}\r\n[/java]\r\n\r\nWhen I ran the application again (I was trying to find a bug) I wasn't getting to the same place in the code as before. Stepping through with the debugger I noticed that I was no longer returning \"true\" during a comparison of the object I had just changed. So I went back to the old version of the equals method. I could not visually see a difference. So I wrote a <a href=\"http://www.junit.org/\">JUnit</a> test case to test the equals method, specifically for <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#equals(java.lang.Object)\">symmetry</a>. That didn't get me very far; everything passed as expected.\r\n\r\nSo I ran the program through the debugger stopping in the equals method for comparison. It looked like the passed in object had nulls for everything. I changed my JUnit tests to test for the same setup, but it worked as expected.\r\n\r\nSo I went back and created 2 equals methods. Then I had each run and if there was a difference between the old equals method and the new equals method, I would just exit the program:\r\n[java gutter=\"false\" toolbar=\"false\"]\r\n@Override\r\npublic boolean equals(final Object obj) {\r\n    // TEMPORARY!!! \r\n    final boolean newEquals = newEquals(obj);\r\n    final boolean oldEquals = oldEquals(obj);\r\n    if (newEquals != oldEquals) {\r\n        newEquals(obj); // for debugging, I can step through the method again \r\n        oldEquals(obj); // for debugging, I can step through the method again\r\n        LOGGER.error(&quot;newEquals (&quot; + newEquals + &quot;) doesn't equal oldEquals (&quot; + oldEquals + &quot;)!!!&quot;);\r\n        LOGGER.error(&quot;this = &quot; + this);\r\n        LOGGER.error(&quot;obj = &quot; + obj);\r\n        System.exit(1); // TEMPORARY!!!\r\n    } \r\n    return oldEquals;\r\n}[/java]\r\nI re-ran the JUnit test, but still no luck.\r\n\r\nI re-ran the application and viola the equals methods were different and the app exited. But what was going on?\r\n\r\nI added a breakpoint in the equals method and looked at the state of the variables again. That's when I noticed the my object being passed in wasn't what I expected, but some kind of proxy object. I expanded the object and found a target variable. I expanded that and saw the values matched the \"this\" object!\r\n\r\n[caption id=\"attachment_2573\" align=\"alignnone\" width=\"640\" caption=\"Equals Comparison Screenshot\"]<a href=\"http://www.adamkoch.com/wp-content/uploads/2012/11/equals_comparison.png\"><img class=\"size-large wp-image-2573\" title=\"Equals Comparison Screenshot\" src=\"http://www.adamkoch.com/wp-content/uploads/2012/11/equals_comparison-1024x501.png\" alt=\"\" width=\"640\" height=\"313\" /></a>[/caption]\r\n\r\nI looked back at the <code>equals</code> methods. The original equals method has get() and mine had just the direct access to the member variable. I step throw the call to the get method and found the proxy will load the member variables to their real values.\r\n\r\nSo, the lesson I learned was that I need to be calling the get methods in my equals method for the object being passed in. I changed my equals template to add a long-winded explanation for the change. Here's my Eclipse template:\r\n[java gutter=\"false\" toolbar=\"true\" title=\"Improved Eclipse Template for EqualsBuilder\"]\r\n@Override\r\npublic boolean equals(Object obj) {\r\n    if (this == obj) {\r\n        return true;\r\n    }\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    if (!(obj instanceof ${enclosing_type})) {\r\n        return false;\r\n    }\r\n    ${enclosing_type} other = (${enclosing_type}) obj;\r\n    ${builderType:newType(org.apache.commons.lang3.builder.EqualsBuilder)} ${builder:newName(builderType)} = new ${builderType}();\r\n    // You want to use get() methods because ${enclosing_type} might by a &quot;proxy&quot; that libraries (such as Hibernate with CGLIB) will create. (Hibernate uses proxies for lazy loading.) And if the object is not loaded, then access to the fields directly will yield nulls. But calls to the get() methods are intercepted and the proxy returns the correct value. See https://forum.hibernate.org/viewtopic.php?t=946468\r\n    ${builder}.append(this.${name}, other.get${name}());${cursor}\r\n\r\n    return ${builder}.isEquals();\r\n}\r\n[/java]\r\n\r\nThanks go to <cite title=\"equals() needed to use get() methods\"><a href=\"https://forum.hibernate.org/viewtopic.php?t=946468\">this post</a></cite> for helping me understand the issue.","excerpt:encoded":"","wp:post_id":"2565","wp:post_date":"2012-11-30 10:56:55","wp:post_date_gmt":"2012-11-30 16:56:55","wp:post_modified":["2012-11-30 10:56:55"],"wp:post_modified_gmt":["2012-11-30 16:56:55"],"wp:comment_status":["open"],"wp:ping_status":["open"],"wp:post_name":"using-getters-in-equals-method","wp:status":"publish","wp:post_parent":["0"],"wp:menu_order":["0"],"wp:post_type":"post","wp:post_password":[""],"wp:is_sticky":["0"],"category":[{"_":"debugging","$":{"domain":"post_tag","nicename":"debugging"}},{"_":"equals","$":{"domain":"post_tag","nicename":"equals"}},{"_":"Hibernate","$":{"domain":"post_tag","nicename":"hibernate"}},{"_":"java","$":{"domain":"post_tag","nicename":"java"}},{"_":"lazy loading","$":{"domain":"post_tag","nicename":"lazy-loading"}},{"_":"Professional","$":{"domain":"category","nicename":"professional"}},{"_":"proxies","$":{"domain":"post_tag","nicename":"proxies"}},{"_":"proxy","$":{"domain":"post_tag","nicename":"proxy"}}],"wp:postmeta":[{"wp:meta_key":["aktt_notify_twitter"],"wp:meta_value":["no"]},{"wp:meta_key":["_edit_last"],"wp:meta_value":["1"]},{"wp:meta_key":["_syntaxhighlighter_encoded"],"wp:meta_value":["1"]},{"wp:meta_key":["_jetpack_related_posts_cache"],"wp:meta_value":["a:1:{s:32:\"8f6677c9d6b0f903e98ad32ec61f8deb\";a:2:{s:7:\"expires\";i:1628486886;s:7:\"payload\";a:3:{i:0;a:1:{s:2:\"id\";i:2164;}i:1;a:1:{s:2:\"id\";i:1724;}i:2;a:1:{s:2:\"id\";i:2824;}}}}"]}],"tidyCategory":"Professional","tidyTags":["debugging","equals","Hibernate","java","lazy loading","proxies","proxy"]}

